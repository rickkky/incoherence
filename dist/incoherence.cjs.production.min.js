'use strict'
var i = 128,
  e = { maxGap: Infinity, immediate: !0 }
function t(t, n, a) {
  void 0 === n && (n = i),
    void 0 === a && (a = e),
    (n <= 0 || !Number.isFinite(n)) && (n = i)
  var o = e.maxGap,
    m = e.immediate
  a &&
    a !== e &&
    (a.maxGap && Number.isFinite(a.maxGap) && a.maxGap >= n && (o = a.maxGap),
    'boolean' == typeof a.immediate && (m = a.immediate))
  var r,
    u,
    s,
    d = m
  function c(i, e) {
    e(t.apply(this, i)),
      (r = void 0),
      (s = void 0),
      Number.isFinite(o) &&
        (u && clearTimeout(u),
        (u = setTimeout(function() {
          d = !0
        }, o))),
      m &&
        (r = setTimeout(function() {
          d = !0
        }, n))
  }
  function p(i, e, t) {
    r && clearTimeout(r),
      s && s({ message: 'Cancelled by debounce.' }),
      (r = void 0),
      (s = void 0),
      d
        ? (setTimeout(c.bind(this, i, e), 0), (d = !1))
        : ((r = setTimeout(c.bind(this, i, e), n)), (s = t))
  }
  return function() {
    for (var i = arguments.length, e = new Array(i), t = 0; t < i; t++)
      e[t] = arguments[t]
    var n = new Promise(p.bind(this, e))
    return (
      n.catch(function(i) {
        return i
      }),
      n
    )
  }
}
;(exports.debounce = t),
  (exports.throttle = function(i, e) {
    return (
      void 0 === e && (e = 128),
      (e <= 0 || !Number.isFinite(e)) && (e = 128),
      t(i, e, { maxGap: e, immediate: !0 })
    )
  })
//# sourceMappingURL=incoherence.cjs.production.min.js.map
